// Mocks generated by Mockito 5.3.2 from annotations
// in satagro/test/features/sat_agro/presentation/bloc/sat_agro_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:satagro/core/error/failure.dart' as _i6;
import 'package:satagro/core/usecases/use_case.dart' as _i8;
import 'package:satagro/features/sat_agro/domain/entities/field.dart' as _i7;
import 'package:satagro/features/sat_agro/domain/repositories/field_repository.dart'
    as _i2;
import 'package:satagro/features/sat_agro/domain/usecases/get_field.dart'
    as _i3;
import 'package:satagro/features/sat_agro/presentation/bloc/sat_agro_bloc.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFieldRepository_0 extends _i1.SmartFake
    implements _i2.FieldRepository {
  _FakeFieldRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetField].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetField extends _i1.Mock implements _i3.GetField {
  MockGetField() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FieldRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeFieldRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.FieldRepository);
  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.Field>?> call(_i8.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, _i7.Field>?>.value(),
      ) as _i4.Future<_i5.Either<_i6.Failure, _i7.Field>?>);
}

/// A class which mocks [LoadField].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoadField extends _i1.Mock implements _i9.LoadField {
  MockLoadField() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
}
